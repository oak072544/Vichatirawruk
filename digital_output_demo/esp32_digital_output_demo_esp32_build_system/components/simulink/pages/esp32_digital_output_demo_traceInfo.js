function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "esp32_digital_output_demo"};
	this.sidHashMap["esp32_digital_output_demo"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "esp32_digital_output_demo:8"};
	this.sidHashMap["esp32_digital_output_demo:8"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "esp32_digital_output_demo:9"};
	this.sidHashMap["esp32_digital_output_demo:9"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<S3>"] = {sid: "esp32_digital_output_demo:12"};
	this.sidHashMap["esp32_digital_output_demo:12"] = {rtwname: "<S3>"};
	this.rtwnameHashMap["<S4>"] = {sid: "esp32_digital_output_demo:13"};
	this.sidHashMap["esp32_digital_output_demo:13"] = {rtwname: "<S4>"};
	this.rtwnameHashMap["<S5>"] = {sid: "esp32_digital_output_demo:28"};
	this.sidHashMap["esp32_digital_output_demo:28"] = {rtwname: "<S5>"};
	this.rtwnameHashMap["<S6>"] = {sid: "esp32_digital_output_demo:29"};
	this.sidHashMap["esp32_digital_output_demo:29"] = {rtwname: "<S6>"};
	this.rtwnameHashMap["<S7>"] = {sid: "esp32_digital_output_demo:30"};
	this.sidHashMap["esp32_digital_output_demo:30"] = {rtwname: "<S7>"};
	this.rtwnameHashMap["<S8>"] = {sid: "esp32_digital_output_demo:31"};
	this.sidHashMap["esp32_digital_output_demo:31"] = {rtwname: "<S8>"};
	this.rtwnameHashMap["<S9>"] = {sid: "esp32_digital_output_demo:5"};
	this.sidHashMap["esp32_digital_output_demo:5"] = {rtwname: "<S9>"};
	this.rtwnameHashMap["<S10>"] = {sid: "esp32_digital_output_demo:5:3"};
	this.sidHashMap["esp32_digital_output_demo:5:3"] = {rtwname: "<S10>"};
	this.rtwnameHashMap["<S11>"] = {sid: "esp32_digital_output_demo:5:5"};
	this.sidHashMap["esp32_digital_output_demo:5:5"] = {rtwname: "<S11>"};
	this.rtwnameHashMap["<Root>/Compare To Constant"] = {sid: "esp32_digital_output_demo:8"};
	this.sidHashMap["esp32_digital_output_demo:8"] = {rtwname: "<Root>/Compare To Constant"};
	this.rtwnameHashMap["<Root>/Compare To Constant1"] = {sid: "esp32_digital_output_demo:9"};
	this.sidHashMap["esp32_digital_output_demo:9"] = {rtwname: "<Root>/Compare To Constant1"};
	this.rtwnameHashMap["<Root>/Compare To Constant2"] = {sid: "esp32_digital_output_demo:12"};
	this.sidHashMap["esp32_digital_output_demo:12"] = {rtwname: "<Root>/Compare To Constant2"};
	this.rtwnameHashMap["<Root>/Compare To Constant3"] = {sid: "esp32_digital_output_demo:13"};
	this.sidHashMap["esp32_digital_output_demo:13"] = {rtwname: "<Root>/Compare To Constant3"};
	this.rtwnameHashMap["<Root>/Compare To Constant4"] = {sid: "esp32_digital_output_demo:28"};
	this.sidHashMap["esp32_digital_output_demo:28"] = {rtwname: "<Root>/Compare To Constant4"};
	this.rtwnameHashMap["<Root>/Compare To Constant5"] = {sid: "esp32_digital_output_demo:29"};
	this.sidHashMap["esp32_digital_output_demo:29"] = {rtwname: "<Root>/Compare To Constant5"};
	this.rtwnameHashMap["<Root>/Compare To Constant6"] = {sid: "esp32_digital_output_demo:30"};
	this.sidHashMap["esp32_digital_output_demo:30"] = {rtwname: "<Root>/Compare To Constant6"};
	this.rtwnameHashMap["<Root>/Compare To Constant7"] = {sid: "esp32_digital_output_demo:31"};
	this.sidHashMap["esp32_digital_output_demo:31"] = {rtwname: "<Root>/Compare To Constant7"};
	this.rtwnameHashMap["<Root>/Counter Limited"] = {sid: "esp32_digital_output_demo:5"};
	this.sidHashMap["esp32_digital_output_demo:5"] = {rtwname: "<Root>/Counter Limited"};
	this.rtwnameHashMap["<Root>/Digital Out"] = {sid: "esp32_digital_output_demo:3"};
	this.sidHashMap["esp32_digital_output_demo:3"] = {rtwname: "<Root>/Digital Out"};
	this.rtwnameHashMap["<Root>/Logical Operator"] = {sid: "esp32_digital_output_demo:17"};
	this.sidHashMap["esp32_digital_output_demo:17"] = {rtwname: "<Root>/Logical Operator"};
	this.rtwnameHashMap["<Root>/Logical Operator1"] = {sid: "esp32_digital_output_demo:18"};
	this.sidHashMap["esp32_digital_output_demo:18"] = {rtwname: "<Root>/Logical Operator1"};
	this.rtwnameHashMap["<Root>/Logical Operator2"] = {sid: "esp32_digital_output_demo:19"};
	this.sidHashMap["esp32_digital_output_demo:19"] = {rtwname: "<Root>/Logical Operator2"};
	this.rtwnameHashMap["<Root>/Logical Operator3"] = {sid: "esp32_digital_output_demo:20"};
	this.sidHashMap["esp32_digital_output_demo:20"] = {rtwname: "<Root>/Logical Operator3"};
	this.rtwnameHashMap["<Root>/OR"] = {sid: "esp32_digital_output_demo:32"};
	this.sidHashMap["esp32_digital_output_demo:32"] = {rtwname: "<Root>/OR"};
	this.rtwnameHashMap["<Root>/OR1"] = {sid: "esp32_digital_output_demo:33"};
	this.sidHashMap["esp32_digital_output_demo:33"] = {rtwname: "<Root>/OR1"};
	this.rtwnameHashMap["<Root>/OR2"] = {sid: "esp32_digital_output_demo:34"};
	this.sidHashMap["esp32_digital_output_demo:34"] = {rtwname: "<Root>/OR2"};
	this.rtwnameHashMap["<Root>/OR3"] = {sid: "esp32_digital_output_demo:35"};
	this.sidHashMap["esp32_digital_output_demo:35"] = {rtwname: "<Root>/OR3"};
	this.rtwnameHashMap["<Root>/Waijung 2 Target Setup"] = {sid: "esp32_digital_output_demo:1"};
	this.sidHashMap["esp32_digital_output_demo:1"] = {rtwname: "<Root>/Waijung 2 Target Setup"};
	this.rtwnameHashMap["<S1>/u"] = {sid: "esp32_digital_output_demo:8:1"};
	this.sidHashMap["esp32_digital_output_demo:8:1"] = {rtwname: "<S1>/u"};
	this.rtwnameHashMap["<S1>/Compare"] = {sid: "esp32_digital_output_demo:8:2"};
	this.sidHashMap["esp32_digital_output_demo:8:2"] = {rtwname: "<S1>/Compare"};
	this.rtwnameHashMap["<S1>/Constant"] = {sid: "esp32_digital_output_demo:8:3"};
	this.sidHashMap["esp32_digital_output_demo:8:3"] = {rtwname: "<S1>/Constant"};
	this.rtwnameHashMap["<S1>/y"] = {sid: "esp32_digital_output_demo:8:4"};
	this.sidHashMap["esp32_digital_output_demo:8:4"] = {rtwname: "<S1>/y"};
	this.rtwnameHashMap["<S2>/u"] = {sid: "esp32_digital_output_demo:9:1"};
	this.sidHashMap["esp32_digital_output_demo:9:1"] = {rtwname: "<S2>/u"};
	this.rtwnameHashMap["<S2>/Compare"] = {sid: "esp32_digital_output_demo:9:2"};
	this.sidHashMap["esp32_digital_output_demo:9:2"] = {rtwname: "<S2>/Compare"};
	this.rtwnameHashMap["<S2>/Constant"] = {sid: "esp32_digital_output_demo:9:3"};
	this.sidHashMap["esp32_digital_output_demo:9:3"] = {rtwname: "<S2>/Constant"};
	this.rtwnameHashMap["<S2>/y"] = {sid: "esp32_digital_output_demo:9:4"};
	this.sidHashMap["esp32_digital_output_demo:9:4"] = {rtwname: "<S2>/y"};
	this.rtwnameHashMap["<S3>/u"] = {sid: "esp32_digital_output_demo:12:1"};
	this.sidHashMap["esp32_digital_output_demo:12:1"] = {rtwname: "<S3>/u"};
	this.rtwnameHashMap["<S3>/Compare"] = {sid: "esp32_digital_output_demo:12:2"};
	this.sidHashMap["esp32_digital_output_demo:12:2"] = {rtwname: "<S3>/Compare"};
	this.rtwnameHashMap["<S3>/Constant"] = {sid: "esp32_digital_output_demo:12:3"};
	this.sidHashMap["esp32_digital_output_demo:12:3"] = {rtwname: "<S3>/Constant"};
	this.rtwnameHashMap["<S3>/y"] = {sid: "esp32_digital_output_demo:12:4"};
	this.sidHashMap["esp32_digital_output_demo:12:4"] = {rtwname: "<S3>/y"};
	this.rtwnameHashMap["<S4>/u"] = {sid: "esp32_digital_output_demo:13:1"};
	this.sidHashMap["esp32_digital_output_demo:13:1"] = {rtwname: "<S4>/u"};
	this.rtwnameHashMap["<S4>/Compare"] = {sid: "esp32_digital_output_demo:13:2"};
	this.sidHashMap["esp32_digital_output_demo:13:2"] = {rtwname: "<S4>/Compare"};
	this.rtwnameHashMap["<S4>/Constant"] = {sid: "esp32_digital_output_demo:13:3"};
	this.sidHashMap["esp32_digital_output_demo:13:3"] = {rtwname: "<S4>/Constant"};
	this.rtwnameHashMap["<S4>/y"] = {sid: "esp32_digital_output_demo:13:4"};
	this.sidHashMap["esp32_digital_output_demo:13:4"] = {rtwname: "<S4>/y"};
	this.rtwnameHashMap["<S5>/u"] = {sid: "esp32_digital_output_demo:28:1"};
	this.sidHashMap["esp32_digital_output_demo:28:1"] = {rtwname: "<S5>/u"};
	this.rtwnameHashMap["<S5>/Compare"] = {sid: "esp32_digital_output_demo:28:2"};
	this.sidHashMap["esp32_digital_output_demo:28:2"] = {rtwname: "<S5>/Compare"};
	this.rtwnameHashMap["<S5>/Constant"] = {sid: "esp32_digital_output_demo:28:3"};
	this.sidHashMap["esp32_digital_output_demo:28:3"] = {rtwname: "<S5>/Constant"};
	this.rtwnameHashMap["<S5>/y"] = {sid: "esp32_digital_output_demo:28:4"};
	this.sidHashMap["esp32_digital_output_demo:28:4"] = {rtwname: "<S5>/y"};
	this.rtwnameHashMap["<S6>/u"] = {sid: "esp32_digital_output_demo:29:1"};
	this.sidHashMap["esp32_digital_output_demo:29:1"] = {rtwname: "<S6>/u"};
	this.rtwnameHashMap["<S6>/Compare"] = {sid: "esp32_digital_output_demo:29:2"};
	this.sidHashMap["esp32_digital_output_demo:29:2"] = {rtwname: "<S6>/Compare"};
	this.rtwnameHashMap["<S6>/Constant"] = {sid: "esp32_digital_output_demo:29:3"};
	this.sidHashMap["esp32_digital_output_demo:29:3"] = {rtwname: "<S6>/Constant"};
	this.rtwnameHashMap["<S6>/y"] = {sid: "esp32_digital_output_demo:29:4"};
	this.sidHashMap["esp32_digital_output_demo:29:4"] = {rtwname: "<S6>/y"};
	this.rtwnameHashMap["<S7>/u"] = {sid: "esp32_digital_output_demo:30:1"};
	this.sidHashMap["esp32_digital_output_demo:30:1"] = {rtwname: "<S7>/u"};
	this.rtwnameHashMap["<S7>/Compare"] = {sid: "esp32_digital_output_demo:30:2"};
	this.sidHashMap["esp32_digital_output_demo:30:2"] = {rtwname: "<S7>/Compare"};
	this.rtwnameHashMap["<S7>/Constant"] = {sid: "esp32_digital_output_demo:30:3"};
	this.sidHashMap["esp32_digital_output_demo:30:3"] = {rtwname: "<S7>/Constant"};
	this.rtwnameHashMap["<S7>/y"] = {sid: "esp32_digital_output_demo:30:4"};
	this.sidHashMap["esp32_digital_output_demo:30:4"] = {rtwname: "<S7>/y"};
	this.rtwnameHashMap["<S8>/u"] = {sid: "esp32_digital_output_demo:31:1"};
	this.sidHashMap["esp32_digital_output_demo:31:1"] = {rtwname: "<S8>/u"};
	this.rtwnameHashMap["<S8>/Compare"] = {sid: "esp32_digital_output_demo:31:2"};
	this.sidHashMap["esp32_digital_output_demo:31:2"] = {rtwname: "<S8>/Compare"};
	this.rtwnameHashMap["<S8>/Constant"] = {sid: "esp32_digital_output_demo:31:3"};
	this.sidHashMap["esp32_digital_output_demo:31:3"] = {rtwname: "<S8>/Constant"};
	this.rtwnameHashMap["<S8>/y"] = {sid: "esp32_digital_output_demo:31:4"};
	this.sidHashMap["esp32_digital_output_demo:31:4"] = {rtwname: "<S8>/y"};
	this.rtwnameHashMap["<S9>/Data Type Propagation"] = {sid: "esp32_digital_output_demo:5:1"};
	this.sidHashMap["esp32_digital_output_demo:5:1"] = {rtwname: "<S9>/Data Type Propagation"};
	this.rtwnameHashMap["<S9>/Force to be scalar"] = {sid: "esp32_digital_output_demo:5:2"};
	this.sidHashMap["esp32_digital_output_demo:5:2"] = {rtwname: "<S9>/Force to be scalar"};
	this.rtwnameHashMap["<S9>/Increment Real World"] = {sid: "esp32_digital_output_demo:5:3"};
	this.sidHashMap["esp32_digital_output_demo:5:3"] = {rtwname: "<S9>/Increment Real World"};
	this.rtwnameHashMap["<S9>/Output"] = {sid: "esp32_digital_output_demo:5:4"};
	this.sidHashMap["esp32_digital_output_demo:5:4"] = {rtwname: "<S9>/Output"};
	this.rtwnameHashMap["<S9>/Wrap To Zero"] = {sid: "esp32_digital_output_demo:5:5"};
	this.sidHashMap["esp32_digital_output_demo:5:5"] = {rtwname: "<S9>/Wrap To Zero"};
	this.rtwnameHashMap["<S9>/y"] = {sid: "esp32_digital_output_demo:5:6"};
	this.sidHashMap["esp32_digital_output_demo:5:6"] = {rtwname: "<S9>/y"};
	this.rtwnameHashMap["<S10>/u"] = {sid: "esp32_digital_output_demo:5:3:1"};
	this.sidHashMap["esp32_digital_output_demo:5:3:1"] = {rtwname: "<S10>/u"};
	this.rtwnameHashMap["<S10>/FixPt Constant"] = {sid: "esp32_digital_output_demo:5:3:2"};
	this.sidHashMap["esp32_digital_output_demo:5:3:2"] = {rtwname: "<S10>/FixPt Constant"};
	this.rtwnameHashMap["<S10>/FixPt Data Type Duplicate"] = {sid: "esp32_digital_output_demo:5:3:3"};
	this.sidHashMap["esp32_digital_output_demo:5:3:3"] = {rtwname: "<S10>/FixPt Data Type Duplicate"};
	this.rtwnameHashMap["<S10>/FixPt Sum1"] = {sid: "esp32_digital_output_demo:5:3:4"};
	this.sidHashMap["esp32_digital_output_demo:5:3:4"] = {rtwname: "<S10>/FixPt Sum1"};
	this.rtwnameHashMap["<S10>/y"] = {sid: "esp32_digital_output_demo:5:3:5"};
	this.sidHashMap["esp32_digital_output_demo:5:3:5"] = {rtwname: "<S10>/y"};
	this.rtwnameHashMap["<S11>/U"] = {sid: "esp32_digital_output_demo:5:5:1"};
	this.sidHashMap["esp32_digital_output_demo:5:5:1"] = {rtwname: "<S11>/U"};
	this.rtwnameHashMap["<S11>/Constant"] = {sid: "esp32_digital_output_demo:5:5:4"};
	this.sidHashMap["esp32_digital_output_demo:5:5:4"] = {rtwname: "<S11>/Constant"};
	this.rtwnameHashMap["<S11>/FixPt Data Type Duplicate1"] = {sid: "esp32_digital_output_demo:5:5:2"};
	this.sidHashMap["esp32_digital_output_demo:5:5:2"] = {rtwname: "<S11>/FixPt Data Type Duplicate1"};
	this.rtwnameHashMap["<S11>/FixPt Switch"] = {sid: "esp32_digital_output_demo:5:5:3"};
	this.sidHashMap["esp32_digital_output_demo:5:5:3"] = {rtwname: "<S11>/FixPt Switch"};
	this.rtwnameHashMap["<S11>/Y"] = {sid: "esp32_digital_output_demo:5:5:5"};
	this.sidHashMap["esp32_digital_output_demo:5:5:5"] = {rtwname: "<S11>/Y"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
